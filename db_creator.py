"""
    Module: db_creator
    Author: Rahul George

    Description: For setting up the database on a new PC

    License:

    Created on: 05-07-2022

"""
# pylint: disable=C0302
# pylint: disable=duplicate-code
# pylint: disable=R0915
# pylint: disable=C0103
import datetime
import uuid
from typing import Tuple

import pymongo
from bson import ObjectId
from pymongo.database import Database


def insert_docs(my_db, collection_name, docs):
    """
        Generic method to perform insert queries
    :param my_db: Instance of mongoDB
    :param collection_name: Name of the Collection as a string
    :param docs: An iterable to insert. list of dicts
    :return: id of the inserted documents as a list.
    """
    collection = my_db[collection_name]
    result = collection.insert_many(docs)
    if len(result.inserted_ids) != len(docs):
        raise ValueError("Some of the inserts failed, Investigate!! ")
    return result.inserted_ids


def drop_collections(my_client: Database, collection_names: Tuple[str]) -> None:
    """
    Generic method to wipe one or more collection in DB
    :param my_client: Instance of MongoDB database
    :param collection_names: Tuple of collection names
    :return:
    """
    if collection_names:
        print(f"Before clean-up:{my_client.list_collection_names()}")
        for collection in my_client.list_collection_names():
            my_client.drop_collection(collection)
    print(f"After clean-up:{my_client.list_collection_names()}")


def db_setup(db_name):  # pylint: disable=R0914
    """Starting point of the script"""
    my_client = pymongo.MongoClient("mongodb://localhost:27017/?uuidRepresentation=standard")

    my_db = my_client[db_name]

    drop_collections(
        my_db,
        (
            "devices",
            "registers",
            "device_macros",
            "fields",
            "device_history",
            "device_evbs",
            "user_device_configurations",
            "blocks",
            "workflows",
            "field_state",
            "register_state",
            "sessions",
        ),
    )

    if db_name == "timing_configurator_local":
        return

    # Table descriptions:
    # devices: Stores data about the device
    # registers: Stores information about the registers in a device
    # fields: Stores information about the fields in a register
    # device_history: Revision history of the devices. You cannot go back in time but can only see the changes.
    # device_evbs: Stores information on different evaluation boards build from a device.
    # user_device_configuration: Configuration and it's steps created by the user.
    # register_state: Snapshot of the configuration.
    # blocks: For UI.
    # workflows: For UI

    #
    # #########################################################
    #  device evbs
    # #########################################################

    evbs = [
        {
            "number": "001",
            "version": "1",
            "vendor_id": 0x0403,
            "product_id": 0xABC,
            "interfaces": [
                {"name": "i2c", "frequency": 20000, "slave_address": 0x21},
                {"name": "spi", "frequency": 120000, "mode": 0, "chip_select": 0, "bit_order": "LE"},
            ],
        }
    ]

    device_evbs_id = insert_docs(my_db, "evbs", evbs)  # pylint: disable=W0612 # noqa:F841

    #########################################################
    # Device
    #########################################################
    devices = [
        {
            "variant": "A1",
            "platform": "Atna",
            "silicon_revision": "v1",
            "release_stage": "General_Availability",
            "created_on": datetime.datetime(2022, 8, 22, 00, 00, 00),
            "version": 1,
            "evbs": [{"model": "", "evb_id": device_evbs_id[0]}],
        },
        {
            "variant": "A2",
            "platform": "Atna",
            "silicon_revision": "v1",
            "release_stage": "Development",
            "created_on": datetime.datetime(2022, 8, 22, 00, 00, 00),
            "version": 1,
            "evbs": [],
        },
        {
            "variant": "SiT9514",
            "platform": "Spinel_B",
            "silicon_revision": "v1",
            "release_stage": "Development",
            "created_on": datetime.datetime(2022, 10, 22, 00, 00, 00),
            "version": 1,
            "evbs": [],
        },
    ]

    # Note: Whenever changes to the collections - device, field, register or device evb - occur,
    # an entry into device_history collection is required.
    # Also, version attribute in the device table needs to be revved up.
    # The version attribute will be used during the sync operation.

    devices_ids = insert_docs(my_db, "devices", devices)

    #########################################################
    # Registers
    #########################################################

    registers = [
        {
            "device_id": devices_ids[0],
            "name": "REG0 (REG_REG)",
            "address": "0x00",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "REG1 (REG_REG)",
            "address": "0x01",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "REG2 (REG_REG)",
            "address": "0x02",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "REG3 (REG_REG)",
            "address": "0x03",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "REG4 (REG_REG)",
            "address": "0x04",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "REG5 (REG_REG)",
            "address": "0x05",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "REG6 (REG_REG)",
            "address": "0x06",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "REG7 (REG_REG)",
            "address": "0x07",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "NVM2 (NVM_REG)",
            "address": "0x22",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "NVM3 (NVM_REG)",
            "address": "0x23",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "NVM8 (NVM_REG)",
            "address": "0x28",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "NVM9 (NVM_REG)",
            "address": "0x29",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "NVM11 (NVM_REG)",
            "address": "0x2B",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "NVM14 (NVM_REG)",
            "address": "0x2E",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "NVM16 (NVM_REG)",
            "address": "0x30",
            "size": 16,
        },
        {
            "device_id": devices_ids[0],
            "name": "NVM21 (NVM_REG)",
            "address": "0x35",
            "size": 16,
        },
        # Reg of Spinal_B
        {
            "device_id": devices_ids[2],
            "name": "REG0 (REG_REG)",
            "address": "0x0",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG1 (REG_REG)",
            "address": "0x1",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG2 (REG_REG)",
            "address": "0x2",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG3 (REG_REG)",
            "address": "0x3",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG4 (REG_REG)",
            "address": "0x4",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG5 (REG_REG)",
            "address": "0x5",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG6 (REG_REG)",
            "address": "0x6",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG7 (REG_REG)",
            "address": "0x7",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG14 (REG_REG)",
            "address": "0xe",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG15 (REG_REG)",
            "address": "0xf",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG17 (REG_REG)",
            "address": "0x11",
            "size": 16,
        },
        {
            "device_id": devices_ids[2],
            "name": "REG18 (REG_REG)",
            "address": "0x12",
            "size": 16,
        },
    ]
    registers_ids = insert_docs(my_db, "registers", registers)

    #########################################################
    # Fields
    #########################################################

    fields = [
        {
            "device_id": devices_ids[0],
            "name": "dig_outdrv_force_en",
            "type": "RW",
            "default": "0x0",
            "description": "This bit forces synchronous OE signal to enable output driver regardless of "
            "startup FSM and external OE state.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "OE force disabled"},
                {"bits": "1", "value": "on", "description": "OE is forced"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x8000", "order": 0, "shift": "15", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
            # "block_diagrams": [{"block_diagram_id": block_diagrams_ids[0], "name": "compname"}],
        },
        {
            "device_id": devices_ids[0],
            "name": "dig_outdrv_force_dis",
            "type": "RW",
            "default": "0x0",
            "description": "This bit forces synchronous OE signal to disable output driver regardless "
            "of startup FSM and external OE state.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "OE not forced"},
                {"bits": "1", "value": "on", "description": "OE is disabled"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x4000", "order": 0, "shift": "14", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
            # "block_diagrams": [{"block_diagram_id": block_diagrams_ids[0], "name": "blockname"}],
        },
        {
            "device_id": devices_ids[0],
            "name": "dig_outdrv_force_oe_async_en",
            "type": "RW",
            "default": "0x0",
            "description": "This bit forces asynchronous OE signal to disable output driver regardless "
            "of startup FSM and external OE state.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "OE not forced"},
                {"bits": "1", "value": "on", "description": "OE is disabled"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x2000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "dig_outdrv_force_oe_async_dis",
            "type": "RW",
            "default": "0x0",
            "description": "This bit forces asynchronous OE signal to disable output driver regardless "
            "of startup FSM and external OE state.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "OE not forced"},
                {"bits": "1", "value": "on", "description": "OE is disabled"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x1000", "order": 0, "shift": "12", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "dig_clear_hold_reg",
            "type": "RW",
            "default": "0x0",
            "description": "This bit resets digReg16,digReg17,digReg18 and digReg19 Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "clear", "description": "Hold regs = 0"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x0800", "order": 0, "shift": "11", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "dig_mask_personality",
            "type": "RW",
            "default": "0x0",
            "description": "Mask personality bit to allow communication when any personality bit "
            "(defined in definition section of this document) is set in shadow."
            "Can be used to burn shadow into NVM when any personality bit is set."
            "Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "Normal operation"},
                {"bits": "1", "value": "on", "description": "Mask personality mode"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x0400", "order": 0, "shift": "10", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_clock_enable",
            "type": "RW",
            "default": "0x0",
            "description": "This bit enables clock for NVM ctrl. It doesn't turn on CMOS_OSC, "
            "MEMS, etc. It is just a gate control  Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "Clock gate is disabled. No  clock"},
                {"bits": "1", "value": "on", "description": "Clock gate is enabled"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x0200", "order": 0, "shift": "9", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "dig_tst_out_inv",
            "type": "RW",
            "default": "0x0",
            "description": "This bit inverts polarity of test data which comes out through "
            "digital test bus  Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "No inversion"},
                {"bits": "1", "value": "invert", "description": "invert"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x0100", "order": 0, "shift": "8", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "fa_timer",
            "type": "RW",
            "default": "0x0",
            "description": "Selects FA timeout Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "128", "description": "128 ms (default)"},
                {"bits": "1", "value": "8", "description": "8 ms (just for test  purpose)"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x0080", "order": 0, "shift": "7", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "fa_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Clears FA mode and disables FA detection at falling " "edge of the bit.  Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "No action"},
                {"bits": "1", "value": "clear", "description": "Disable FA mode at falling  edge of this bit"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x0040", "order": 0, "shift": "6", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "fa_lvl_mask",
            "type": "RW",
            "default": "0x0",
            "description": "Masks fa_level signal inside digital to disable fa detection  Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "on", "description": "FA detection is disabled"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x0020", "order": 0, "shift": "5", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "dig_test_dout_self_clk",
            "type": "",
            "default": "0x0",
            "description": "Enables internal clocking   of digital serial test " "bus (~20MHz)  Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "External clock through  progPin"},
                {"bits": "1", "value": "enable", "description": "Internal clock 20MHz"},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x0010", "order": 0, "shift": "4", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_PTM",
            "type": "RW",
            "default": "0x0",
            "description": "eMemory PTM control  Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0000", "value": "read", "description": "Default state for read and  standby"},
                {"bits": "0001", "value": "init_rd_margin", "description": "Initial margin read mode"},
                {"bits": "0010", "value": "pgm_vdd", "description": "Program mode using VDD2"},
                {"bits": "0011", "value": "not_used", "description": ""},
                {"bits": "0100", "value": "pgm_rd_margin", "description": "Program margin read mode"},
                {"bits": "0101", "value": "not_used", "description": ""},
                {"bits": "0110", "value": "not_used", "description": ""},
                {"bits": "0111", "value": "not_used", "description": ""},
                {"bits": "1000", "value": "not_used", "description": ""},
                {"bits": "1001", "value": "not_used", "description": ""},
                {
                    "bits": "1010",
                    "value": "pgm_vpp",
                    "description": "Program mode using external  VPP. Not supported " "for Anta",
                },
                {"bits": "1011", "value": "not_used", "description": ""},
                {"bits": "1100", "value": "not_used", "description": ""},
                {"bits": "1101", "value": "not_used", "description": ""},
                {"bits": "1110", "value": "not_used", "description": ""},
                {"bits": "1111", "value": "not_used", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[0], "mask": "0x000F", "order": 0, "shift": "0", "width": 4}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # REG1(REG_REG)
        {
            "device_id": devices_ids[0],
            "name": "nvm_row",
            "type": "RW",
            "default": "0x0",
            "description": "Select eMemory row 0-63 Token_type: formula",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "formula",
            "tokens": [],
            "bits": [{"register_id": registers_ids[1], "mask": "0xFC00", "order": 0, "shift": "10", "width": 6}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_byte_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Select bite 0-3 within 32bit data in hold for bit-based operation Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "0", "description": "Bits 0-7"},
                {"bits": "01", "value": "1", "description": "Bits 15-8"},
                {"bits": "10", "value": "2", "description": "Bits 23-16"},
                {"bits": "11", "value": "3", "description": "Bits 31-24"},
            ],
            "bits": [{"register_id": registers_ids[1], "mask": "0x0300", "order": 0, "shift": "8", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_byte_mask",
            "type": "RW",
            "default": "0x0",
            "description": "8-bit burn mask Token_type: formula",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "formula",
            "tokens": [],
            "bits": [{"register_id": registers_ids[1], "mask": "0x00FF", "order": 0, "shift": "0", "width": 8}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # REG2 (REG_REG)
        {
            "device_id": devices_ids[0],
            "name": "sttup_set_osc_stable_time",
            "type": "RW",
            "default": "0x0",
            "description": "to bypass the osc_stable_wait startup stateToken_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "stay", "description": "disable jump"},
                {"bits": "1", "value": "jump", "description": "enable force to jump"},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x8000", "order": 0, "shift": "15", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "sttup_set_bg_stable_wait",
            "type": "RW",
            "default": "0x0",
            "description": "to bypass the osc_bg_stable_wait startup state Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "stay", "description": "disable jump"},
                {"bits": "1", "value": "jump", "description": "enable force to jump"},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x4000", "order": 0, "shift": "14", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_request_valid",
            "type": "RW",
            "default": "0x0",
            "description": "This bit commands NVM ctrl to start operation according to “nvm_request_code” field "
            "Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "Do nothing"},
                {"bits": "1", "value": "valid", "description": "Start operation"},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x2000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_request_code",
            "type": "RW",
            "default": "0x0",
            "description": "User command filed for NVM ctrl."
            "Usage:"
            "1)Set  nvm_request_code"
            "2)Set  nvm_request_valid = valid"
            "3)Wait for cmd to finish"
            "4)Set  nvm_request_valid = default"
            "Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0000", "value": "none", "description": "No operation"},
                {
                    "bits": "0001",
                    "value": "autoburn_copy",
                    "description": "Runs autoburn of selected copy of the "
                    "group. Burns all data bits. Also burns "
                    "hamming ECC for each row and CRC in the "
                    "next row after the last data row (if "
                    "selected).Compares burned data with shadow "
                    "(if selected)",
                },
                {
                    "bits": "0010",
                    "value": "autoburn_hold",
                    "description": "Runs autoburn of data loaded into HOLD to "
                    "selected NVM row. Burns both data bits and "
                    "ECC (if selected)",
                },
                {
                    "bits": "0011",
                    "value": "autoburn_crc",
                    "description": "Runs autoburn CRC row of selected copy of "
                    "the group in the next row after the last "
                    "data row according to the data image in "
                    "shadow",
                },
                {
                    "bits": "0100",
                    "value": "autoburn_ecc",
                    "description": "Runs autoburn of hamming ECC for each row of "
                    "selected copy of the group according to the "
                    "data image in shadow",
                },
                {
                    "bits": "0101",
                    "value": "load_hold",
                    "description": "Reads selected NVM row and load it to HOLD. " "Checks ECC (if enabled)",
                },
                {"bits": "0110", "value": "clear_flags", "description": "Clears error_code register"},
                {
                    "bits": "0111",
                    "value": "burn_mask",
                    "description": "Burns 8 bits of data in HOLD to selected NVM "
                    "row. Burns all subbit sections of selected "
                    "bits",
                },
                {
                    "bits": "1000",
                    "value": "autoburn_mstr",
                    "description": "Runs autoburn of selected master row area "
                    "from Hold. Should contain information "
                    "regarding each group and ecc/crc to be "
                    "loaded during startup in a format shown in "
                    "table 1. This row will be automatically "
                    "protected with ECC so no burn with mask "
                    "allowed",
                },
                {"bits": "1001", "value": "not_used", "description": ""},
                {
                    "bits": "1010",
                    "value": "reload_copy",
                    "description": "Reloads selected copy of the group to shadow. "
                    "ECC and CRC checks could be enabled",
                },
                {
                    "bits": "1011",
                    "value": "reload_mstr",
                    "description": "Reloads shadow according to selected MSTR row",
                },
                {
                    "bits": "1100",
                    "value": "load_hold_raw",
                    "description": "Reads selected NVM row and load 38 bits of "
                    "data to HOLD. ECC bits are loaded to "
                    "digReg18.**** nvm_use_ecc flag must be set "
                    "to 'off'****",
                },
                {"bits": "1101", "value": "not_used", "description": ""},
                {"bits": "1110", "value": "not_used", "description": ""},
                {"bits": "1111", "value": "reload_init", "description": "Runs initial NVM startup sequence"},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x1E00", "order": 0, "shift": "9", "width": 4}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_cmp_en",
            "type": "RW",
            "default": "0x0",
            "description": "This bit enables comparison of just burned data with its image in shadow Usable for burn "
            "operations. Reads back data from nvm row is Program margin read mode and compares read "
            "data with shadow. Error code = 5 will be set in case of comparison issue Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "Comparison is disabled"},
                {"bits": "1", "value": "on", "description": "Comparison is enabled"},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x0100", "order": 0, "shift": "8", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_use_crc",
            "type": "RW",
            "default": "0x0",
            "description": "This bit enables CRC checksum calculation and check for read operations and CRC checksum "
            "calculation for burn operations.CRC32 poly:  0x04C11DB7 Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "CRC is disabled"},
                {"bits": "1", "value": "on", "description": "CRC is enabled"},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x0080", "order": 0, "shift": "7", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_use_ecc",
            "type": "RW",
            "default": "0x0",
            "description": "This bit enables ECC checksum calculation and check for read operations and ECC checksum "
            "calculation for burn operations.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "ECC is disabled"},
                {"bits": "1", "value": "on", "description": "ECC is enabled"},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x0040", "order": 0, "shift": "6", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_time_trim",
            "type": "RW",
            "default": "0x0",
            "description": "Select timing constants according to selected clock source for NVM ctrl. This field "
            "selects only timing constants. Clock source is selected using “nvm_clk_source_sel "
            "Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "cmos_sttup", "description": "Worst case ~40MHz"},
                {"bits": "01", "value": "mems", "description": "Mems 78.125/4 = 19.53MHz"},
                {"bits": "10", "value": "vco", "description": "VCO/4 = 22MHz"},
                {"bits": "11", "value": "cmos", "description": "Default CMOS ~21MHz"},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x0030", "order": 0, "shift": "4", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_copy_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Selects required copy of NVM group settings Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "0", "description": "Copy 0"},
                {"bits": "01", "value": "1", "description": "Copy 1"},
                {"bits": "10", "value": "2", "description": "Copy 2"},
                {"bits": "11", "value": "not_used", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x000C", "order": 0, "shift": "2", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_group_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Selects group of NVM settings Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "common", "description": "Common group"},
                {"bits": "01", "value": "config", "description": "Config group"},
                {"bits": "10", "value": "coeff", "description": "Coeff group"},
                {"bits": "11", "value": "not_used", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[2], "mask": "0x0003", "order": 0, "shift": "0", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # REG3(REG_REG)
        {
            "device_id": devices_ids[0],
            "name": "dig_rx_mask",
            "type": "RW",
            "default": "0x0",
            "description": "Masks serial clock and serial data inputs to disable incoming packages from progPin "
            "Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "Rx is on"},
                {"bits": "1", "value": "on", "description": "Rx is off"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x8000", "order": 0, "shift": "15", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "ssc_toggle_en",
            "type": "RW",
            "default": "0x0",
            "description": "Adds XOR to ssc_en. tc_ssc_en = ssc_en xor ssc_toggle_en. ssc_en is mainly controlled by "
            "‘ssc_spread_en’Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "keep the current ssc_en state"},
                {"bits": "1", "value": "toggle", "description": "invert the current ssc_en state"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x4000", "order": 0, "shift": "14", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "mems_trim_comm_dis_time",
            "type": "RW",
            "default": "0x0",
            "description": "Select time interval of disabling communication during mems trimming Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "800us", "description": ""},
                {"bits": "1", "value": "500us", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x2000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "force_cmos_osc_pd",
            "type": "RW",
            "default": "0x0",
            "description": "Power down CMOS OSC Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "Do nothing"},
                {"bits": "1", "value": "pd", "description": "Force pd"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x1000", "order": 0, "shift": "12", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "sdm_pll_clk_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enables PLL clk for SDM Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0800", "order": 0, "shift": "11", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "nvm_clk_source_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Select source clock for NVM ctrl Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "cmos", "description": ""},
                {"bits": "01", "value": "mems", "description": "Assumed to be used for burning"},
                {"bits": "10", "value": "vco", "description": ""},
                {"bits": "11", "value": "not_used", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0600", "order": 0, "shift": "9", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "tdc_filter_initialize",
            "type": "RW",
            "default": "0x0",
            "description": "initialize the tempcomp filter Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "normal operation -filtering"},
                {
                    "bits": "1",
                    "value": "on",
                    "description": "initialized the filter memory and same effect with bypass",
                },
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0100", "order": 0, "shift": "8", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "dig_tc_clk_10m_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Switch tc clock from 5Mhz to 10Mhz Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": "5Mhz"},
                {"bits": "1", "value": "on", "description": "10Mhz"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0080", "order": 0, "shift": "7", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "sttup_set_pll_lock",
            "type": "RW",
            "default": "0x0",
            "description": "bypass the pll_stable_wait startup state Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "stay", "description": "disable jump"},
                {"bits": "1", "value": "jump", "description": "enable force to jump"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0040", "order": 0, "shift": "6", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "sttup_sel_tdc_ready",
            "type": "RW",
            "default": "0x0",
            "description": "bypass the tdc_stable_wait startup state Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "stay", "description": "disable jump"},
                {"bits": "1", "value": "jump", "description": "enable force to jump"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0020", "order": 0, "shift": "5", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "sttup_set_coeff_read",
            "type": "RW",
            "default": "0x0",
            "description": "bypass the nvm_coeff_read startup state Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "stay", "description": "disable jump"},
                {"bits": "1", "value": "jump", "description": "enable force to jump"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0010", "order": 0, "shift": "4", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "sttup_set_osc_detect",
            "type": "RW",
            "default": "0x0",
            "description": "bypass the osc_detect startup state Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "stay", "description": "disable jump"},
                {"bits": "1", "value": "jump", "description": "enable force to jump"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0008", "order": 0, "shift": "3", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "sttup_set_nvm_config_read",
            "type": "RW",
            "default": "0x0",
            "description": "bypass the nvm_config_read startup state Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "stay", "description": "disable jump"},
                {"bits": "1", "value": "jump", "description": "enable force to jump"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0004", "order": 0, "shift": "2", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "sttup_set_bg_ready",
            "type": "RW",
            "default": "0x0",
            "description": "bypass the bg_ready startup state Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "stay", "description": "disable jump"},
                {"bits": "1", "value": "jump", "description": "enable force to jump"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0002", "order": 0, "shift": "1", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "sttup_set_nvm_common_read",
            "type": "RW",
            "default": "0x0",
            "description": "bypass nvm_common_read startup state Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "stay", "description": "disable jump"},
                {"bits": "1", "value": "jump", "description": "enable force to jump"},
            ],
            "bits": [{"register_id": registers_ids[3], "mask": "0x0001", "order": 0, "shift": "0", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # REG4 (REG_REG)
        {
            "device_id": devices_ids[0],
            "name": "tdc_ch_clk_ctrl",
            "type": "RW",
            "default": "0x0",
            "description": "Selects the chopping frequency for the first integrator:Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "25", "description": "25 KHz (default)"},
                {"bits": "01", "value": "12.5", "description": "12.5 KHz"},
                {"bits": "10", "value": "50", "description": "50 KHz"},
                {"bits": "11", "value": "disable", "description": "Chopping is disabled"},
            ],
            "bits": [{"register_id": registers_ids[4], "mask": "0xC000", "order": 0, "shift": "14", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "tdc_clk_div2",
            "type": "RW",
            "default": "0x0",
            "description": "Bypasses the divide-by-2 DFF at the input of the clkgen block Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "Divide by 2 is enabled"},
                {"bits": "1", "value": "bypass", "description": "Divide by 2 is bypassed (use when freq is 38.4Mhz)"},
            ],
            "bits": [{"register_id": registers_ids[4], "mask": "0x2000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "tdc_dem_clk_ctrl",
            "type": "RW",
            "default": "0x0",
            "description": "Selects the DEM frequency for the front-end current sources (this is the DEM state update "
            "rate, to cycle all DEM states, the frequency is divided by 6): Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "25", "description": "25 KHz (default)"},
                {"bits": "01", "value": "12.5", "description": "12.5 KHz"},
                {"bits": "10", "value": "50", "description": "50 KHz"},
                {"bits": "11", "value": "disable", "description": "Chopping is disabled"},
            ],
            "bits": [{"register_id": registers_ids[4], "mask": "0x1800", "order": 0, "shift": "11", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "drv_pu_start_en",
            "type": "RW",
            "default": "0x0",
            "description": "Selects outdrv PU during startup. Works with drv_pu_start_sel Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": ""},
                {"bits": "1", "value": "on", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[4], "mask": "0x0400", "order": 0, "shift": "10", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "drv_pu_start_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Selects outdrv PU control startup (test feature) Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "startup"},
                {"bits": "1", "value": "register", "description": "drv_pu_start_en (REG4[10])"},
            ],
            "bits": [{"register_id": registers_ids[4], "mask": "0x0200", "order": 0, "shift": "9", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "drv_out_logic_force_level",
            "type": "RW",
            "default": "0x0",
            "description": "Force LVDS/HCSL/LP-HCSL/LVPECL/reg-LVCMOS output to a logic level Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "low", "description": ""},
                {"bits": "1", "value": "high", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[4], "mask": "0x0080", "order": 0, "shift": "7", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "drv_logic_force_en",
            "type": "RW",
            "default": "0x0",
            "description": "Force LVDS/HCSL/LP-HCSL/LVPECL/reg-LVCMOS output to logic level Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "enable", "description": "DC forcing mode"},
            ],
            "bits": [{"register_id": registers_ids[4], "mask": "0x0040", "order": 0, "shift": "6", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "bg_vbg_ext_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enable signal for external voltage on vbg Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[4], "mask": "0x0002", "order": 0, "shift": "1", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "bg_voscref_ext_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enable signal for external voltage on voscref Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[4], "mask": "0x0001", "order": 0, "shift": "0", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # REG5 (REG_REG)
        {
            "device_id": devices_ids[0],
            "name": "pll_extclk_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Selects the external clock as the PLL reference clock, instead of the MEMS clock "
            "regulator.Token_type:list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "MEMS"},
                {"bits": "1", "value": "enable", "description": "EXT"},
            ],
            "bits": [{"register_id": registers_ids[5], "mask": "0x1000", "order": 0, "shift": "12", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "pll_fbdiv_pd",
            "type": "RW",
            "default": "0x0",
            "description": "powers down the pll feedback dividers Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "en", "description": ""},
                {"bits": "1", "value": "pd", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[5], "mask": "0x0800", "order": 0, "shift": "11", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "pll_pdiv_pd",
            "type": "RW",
            "default": "0x0",
            "description": "powers down the pll post dividers Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "en", "description": ""},
                {"bits": "1", "value": "pd", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[5], "mask": "0x0400", "order": 0, "shift": "10", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "pll_pegvco_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enables the PLL VCO peg mode Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": ""},
                {"bits": "1", "value": "on", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[5], "mask": "0x0200", "order": 0, "shift": "9", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "pll_pegvco_val",
            "type": "RW",
            "default": "0x0",
            "description": "Selects the peg value of vctrl_ac & vctrl_dc to the PLL Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0000", "value": "vctrl_ac0p2_dc0p2", "description": "vctrl_ac0p2_dc0p2"},
                {"bits": "0001", "value": "vctrl_ac0p3_dc0p2", "description": "vctrl_ac0p3_dc0p2"},
                {"bits": "0010", "value": "vctrl_ac0p3_dc0p3", "description": "vctrl_ac0p3_dc0p3"},
                {"bits": "0011", "value": "vctrl_ac0p4_dc0p3", "description": "vctrl_ac0p4_dc0p3"},
                {"bits": "0100", "value": "vctrl_ac0p4_dc0p4", "description": "vctrl_ac0p4_dc0p4"},
                {"bits": "0101", "value": "vctrl_ac0p5_dc0p4", "description": "vctrl_ac0p5_dc0p4"},
                {"bits": "0110", "value": "vctrl_ac0p5_dc0p5", "description": "vctrl_ac0p5_dc0p5"},
                {"bits": "0111", "value": "vctrl_ac0p6_dc0p5", "description": "vctrl_ac0p6_dc0p5"},
                {"bits": "1000", "value": "vctrl_ac0p6_dc0p6", "description": "vctrl_ac0p6_dc0p6"},
                {"bits": "1001", "value": "vctrl_ac0p7_dc0p6", "description": "vctrl_ac0p7_dc0p6"},
                {"bits": "1010", "value": "vctrl_ac0p7_dc0p7", "description": "vctrl_ac0p7_dc0p7"},
                {"bits": "1011", "value": "vctrl_ac0p8_dc0p7", "description": "vctrl_ac0p8_dc0p7"},
                {"bits": "1100", "value": "vctrl_ac0p8_dc0p8", "description": "vctrl_ac0p8_dc0p8"},
                {"bits": "1101", "value": "vctrl_ac0p9_dc0p8", "description": "vctrl_ac0p9_dc0p8"},
                {"bits": "1110", "value": "vctrl_ac0p9_dc0p9", "description": "vctrl_ac0p9_dc0p9"},
                {"bits": "1111", "value": "vctrl_ac1p0_dc0p9", "description": "vctrl_ac1p0_dc0p9"},
            ],
            "bits": [{"register_id": registers_ids[5], "mask": "0x01E0", "order": 0, "shift": "5", "width": 4}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # REG6 (REG_REG)
        {
            "device_id": devices_ids[0],
            "name": "osc_vreg_top_byp",
            "type": "RW",
            "default": "0x0",
            "description": "Bypasses the OSC top regulator. Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "Top regulator is not bypassed"},
                {"bits": "1", "value": "bypass", "description": "Top regulator is bypassed"},
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x8000", "order": 0, "shift": "15", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_pkdbuf_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Selects 1 of the 4 peakdetector buffers to send its output to the peak "
            "detector.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "none", "description": "No peak detector selected"},
                {"bits": "001", "value": "sense", "description": "Sense node peak detector selected"},
                {"bits": "010", "value": "drive", "description": "Drive node peak detector selected"},
                {"bits": "011", "value": "drive_inv", "description": "Drive inverter output peak detector selected"},
                {"bits": "100", "value": "sense_inv", "description": "Sense inverter output peak detector selected"},
                {"bits": "101", "value": "not_used", "description": ""},
                {"bits": "110", "value": "not_used", "description": ""},
                {"bits": "111", "value": "not_used", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x1C00", "order": 0, "shift": "10", "width": 3}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_pkdet_lg",
            "type": "RW",
            "default": "0x0",
            "description": "Attenuates peak detector gain by x2, when high-swing voltages are to be measured. Has to "
            "be disabled during any start-up or un-halt test scenario. Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x0200", "order": 0, "shift": "9", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_en_idac",
            "type": "RW",
            "default": "0x0",
            "description": "Enables current going into the test devices in osc_test Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x0100", "order": 0, "shift": "8", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_en_itest20u",
            "type": "RW",
            "default": "0x0",
            "description": "Enables 20uA current for Osc test modes.  Should be enabled only during test "
            "modes.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": "Disables the 20uA current,"},
                {"bits": "1", "value": "enable", "description": "20uA current is enabled inside osc_test"},
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x0080", "order": 0, "shift": "7", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_en_itest2u",
            "type": "RW",
            "default": "0x0",
            "description": "Enables 2uA current for Osc test structures.  Should be enabled only during test modes. "
            "Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": "Disables the 2uA current"},
                {"bits": "1", "value": "enable", "description": "2uA current is enabled inside osc_test"},
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x0040", "order": 0, "shift": "6", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_en_iref_trim",
            "type": "RW",
            "default": "0x0",
            "description": "Enables current going into sense inverter resistors. Should be enabled only during test "
            "modes. Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {
                    "bits": "0",
                    "value": "disable",
                    "description": "The test current going to sense inverter resistor is turned off.",
                },
                {
                    "bits": "1",
                    "value": "enable",
                    "description": "The test current going to sense inverter resistor is turned on, "
                    "the value of current "
                    "depends on  “osc_1p2_en_itest2” and  “osc_1p2_en_itest20”",
                },
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x0020", "order": 0, "shift": "5", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_halt_sns",
            "type": "RW",
            "default": "0x0",
            "description": "Controls sense inverter halt switch. Should only be pulled high during test mode, "
            "during particular tests / trim procedures.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": ""},
                {"bits": "1", "value": "on", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x0004", "order": 0, "shift": "2", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_halt_drv",
            "type": "RW",
            "default": "0x0",
            "description": "Controls drive inverter input halt switch. Should only be pulled high during test mode, "
            "during particular tests / trim procedures.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": ""},
                {"bits": "1", "value": "on", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x0002", "order": 0, "shift": "1", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_halt_drvout",
            "type": "RW",
            "default": "0x0",
            "description": "Pulls down oscillator drive amplifier output. Used during some spectrum-analyzer mode "
            "MEMS tests, for additional safety. Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "off", "description": ""},
                {"bits": "1", "value": "on", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[6], "mask": "0x0001", "order": 0, "shift": "0", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # REG7(REG_REG)
        {
            "device_id": devices_ids[0],
            "name": "osc_adrv_str",
            "type": "RW",
            "default": "0x0",
            "description": "Turns on the auxiliary driver for MEMS over-drive and spectrum analyzer-mode tests. Sets "
            "the strength of auxiliary driver. Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0000", "value": "disable", "description": "Spectrum analyzer mode is disabled"},
                {"bits": "0001", "value": "392fF", "description": ""},
                {"bits": "0010", "value": "784fF", "description": ""},
                {"bits": "0011", "value": "1176fF", "description": ""},
                {"bits": "0100", "value": "1568fF", "description": ""},
                {"bits": "0101", "value": "1960fF", "description": ""},
                {"bits": "0110", "value": "2352fF", "description": ""},
                {"bits": "0111", "value": "2744fF", "description": ""},
                {"bits": "1000", "value": "3136fF", "description": ""},
                {"bits": "1001", "value": "3528fF", "description": ""},
                {"bits": "1010", "value": "3920fF", "description": ""},
                {"bits": "1011", "value": "4312fF", "description": ""},
                {"bits": "1100", "value": "4704fF", "description": ""},
                {"bits": "1101", "value": "5096fF", "description": ""},
                {"bits": "1110", "value": "5488fF", "description": ""},
                {"bits": "1111", "value": "5880fF", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0xF000", "order": 0, "shift": "12", "width": 4}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "pll_auxdiv_5M_en",
            "type": "RW",
            "default": "0x0",
            "token_type": "list",
            "description": "Enables the 5MHz output clock from the PLL-auxdiv. Note that, before using this register, "
            "the Auxdiv should be powered up using a separate NVM ‘pll_auxdiv_en’ Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0x0800", "order": 0, "shift": "11", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "tdc_clk_ext_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Selects the external clock as a TDC reference clock, instead of MEMS/VCO clock "
            "regulator.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": "disable"},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0x0200", "order": 0, "shift": "9", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_3v_test_ref",
            "type": "RW",
            "default": "0x0",
            "description": "Enables external references for OSC bottom regulators. Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {
                    "bits": "00",
                    "value": "default",
                    "description": "the on-chip references are provided to both sense and drive regulators",
                },
                {"bits": "01", "value": "sense", "description": "Sense inverter regulator is provided"},
                {
                    "bits": "10",
                    "value": "drive",
                    "description": "drive inverter regulator is provided with external reference",
                },
                {
                    "bits": "11",
                    "value": "both",
                    "description": "both bottom regulators are provided with the external reference",
                },
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0x0180", "order": 0, "shift": "7", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_ pd_vreg_bot[",
            "type": "RW",
            "default": "0x0",
            "description": "Power down the OSC bottom regulators.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "default", "description": "default both bottom regulators are enabled,"},
                {"bits": "01", "value": "sense", "description": "Sense regulator is powered down"},
                {"bits": "10", "value": "drive", "description": "Drive inverter regulator is power down"},
                {
                    "bits": "11",
                    "value": "both",
                    "description": "Both sense and drive inverter regulators are powered down",
                },
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0x0060", "order": 0, "shift": "5", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_pd_vreg_top",
            "type": "RW",
            "default": "0x0",
            "description": "Controls Top regulator Power down.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": "Top regulator is in normal operation."},
                {"bits": "1", "value": "pd", "description": "Top regulator is in power down mode."},
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0x0010", "order": 0, "shift": "4", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_en_var_auxpin_bias",
            "type": "RW",
            "default": "0x0",
            "description": "Enables the External Reference coming from Aux pin to go the Osc Varactor Control "
            "Voltage.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0x0008", "order": 0, "shift": "3", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "auxpin_en_ext_vref",
            "type": "RW",
            "default": "0x0",
            "description": "enables External DC reference coming from Aux pin (to OSC)Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0x0004", "order": 0, "shift": "2", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_en_aux_ctrl_in",
            "type": "RW",
            "default": "0x0",
            "description": "Controls the auxiliary control input coming into the sense input. Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": "Disables the mems input coming from aux pin"},
                {"bits": "1", "value": "enable", "description": "Enables the mems input coming from aux pin"},
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0x0002", "order": 0, "shift": "1", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "osc_en_ringdown",
            "type": "RW",
            "default": "0x0",
            "description": "Enables ringdown test Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[7], "mask": "0x0001", "order": 0, "shift": "0", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # NVM2[3:1]
        {
            "device_id": devices_ids[0],
            "name": "osc_vreg_top_trim",
            "type": "RW",
            "default": "0x0",
            "description": "The 3 LSB bits of  osc_vreg_top_trim. See reg6[14]. Reg6[14] is the MSB bit of "
            "osc_vreg_top_trim[3:0] Sets the top regulator output voltage in combination with "
            "vctop_reg. {vctop_reg, vctop}Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0000", "value": "1.501", "description": "1.501V"},
                {"bits": "0001", "value": "1.486", "description": "1.486V"},
                {"bits": "0010", "value": "1.471", "description": "1.471V"},
                {"bits": "0011", "value": "1.457", "description": "1.457V"},
                {"bits": "0100", "value": "1.567", "description": "1.567V"},
                {"bits": "0101", "value": "1.550", "description": "1.550V"},
                {"bits": "0110", "value": "1.533", "description": "1.533V"},
                {"bits": "0111", "value": "1.517", "description": "1.517V"},
                {"bits": "1000", "value": "test_1.394", "description": "1.394V"},
                {"bits": "1001", "value": "test_1.382", "description": "1.382V"},
                {"bits": "1010", "value": "test_1.371", "description": "1.371V"},
                {"bits": "1011", "value": "test_1.361", "description": "1.361V"},
                {"bits": "1100", "value": "test_1.443", "description": "1.443V"},
                {"bits": "1101", "value": "test_1.43", "description": "1.43V"},
                {"bits": "1110", "value": "test_1.418", "description": "1.418V"},
                {"bits": "1111", "value": "test_1.406", "description": "1.406V"},
            ],
            "bits": [
                {"register_id": registers_ids[8], "mask": "0x000E", "order": 0, "shift": "1", "width": 3},
                {"register_id": registers_ids[6], "mask": "0x4000", "order": 1, "shift": "14", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # NVM3 [8:5]
        {
            "device_id": devices_ids[0],
            "name": "osc_vreg_sense_clkbuf_trim",
            "type": "RW",
            "default": "0x0",
            "description": "Sets the sense inverter supply voltage in combination with  osc_ext_vccbuf.See Reg6["
            "13].Reg6[13] sets the MSB bit of osc_vreg_sense_clkbuf_trim[4:0]Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00000", "value": "1.262", "description": "1.262V"},
                {"bits": "00001", "value": "1.271", "description": "1.271V"},
                {"bits": "00010", "value": "1.280", "description": "1.280V"},
                {"bits": "00011", "value": "1.289", "description": "1.289V"},
                {"bits": "00100", "value": "1.229", "description": "1.229V"},
                {"bits": "00101", "value": "1.237", "description": "1.237V"},
                {"bits": "00110", "value": "1.245", "description": "1.245V"},
                {"bits": "00111", "value": "1.253", "description": "1.253V"},
                {"bits": "01000", "value": "1.200", "description": "1.200V"},
                {"bits": "01001", "value": "1.206", "description": "1.206V"},
                {"bits": "01010", "value": "1.213", "description": "1.213V"},
                {"bits": "01011", "value": "1.220", "description": "1.220V"},
                {"bits": "01100", "value": "1.173", "description": "1.173V"},
                {"bits": "01101", "value": "1.179", "description": "1.179V"},
                {"bits": "01110", "value": "1.185", "description": "1.185V"},
                {"bits": "01111", "value": "1.192", "description": "1.192V"},
                {"bits": "10000", "value": "test_1.149", "description": "1.149V"},
                {"bits": "10001", "value": "test_1.154", "description": "1.154V"},
                {"bits": "10010", "value": "test_1.157", "description": "1.157V"},
                {"bits": "10011", "value": "test_1.164", "description": "1.164V"},
                {"bits": "10100", "value": "test_1.127", "description": "1.127V"},
                {"bits": "10101", "value": "test_1.132", "description": "1.132V"},
                {"bits": "10110", "value": "test_1.138", "description": "1.138V"},
                {"bits": "10111", "value": "test_1.143", "description": "1.143V"},
                {"bits": "11000", "value": "test_1.108", "description": "1.108V"},
                {"bits": "11001", "value": "test_1.112", "description": "1.112V"},
                {"bits": "11010", "value": "test_1.117", "description": "1.117V"},
                {"bits": "11011", "value": "test_1.122", "description": "1.122V"},
                {"bits": "11100", "value": "test_1.090", "description": "1.090V"},
                {"bits": "11101", "value": "test_1.094", "description": "1.094V"},
                {"bits": "11110", "value": "test_1.098", "description": "1.098V"},
                {"bits": "11111", "value": "test_1.103", "description": "1.103V"},
            ],
            "bits": [
                {"register_id": registers_ids[9], "mask": "0x01E0", "order": 0, "shift": "5", "width": 4},
                {"register_id": registers_ids[6], "mask": "0x0003", "order": 1, "shift": "13", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # NVM 9[6:5],[1:0]
        {
            "device_id": devices_ids[0],
            "name": "tdc_vreg_top_trim",
            "type": "RW",
            "default": "0x0",
            "description": "LSB part of  tdc_vreg_top_trim. See reg4[8] Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "1.475", "description": "1.475V"},
                {"bits": "001", "value": "1.45", "description": "1.45V"},
                {"bits": "010", "value": "1.5", "description": "1.5V"},
                {"bits": "011", "value": "1.425", "description": "1.425V"},
                {"bits": "100", "value": "bypass", "description": ""},
                {"bits": "101", "value": "not_used", "description": ""},
                {"bits": "110", "value": "not_used", "description": ""},
                {"bits": "111", "value": "disable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[11], "mask": "0x0060", "order": 0, "shift": "5", "width": 2},
                {"register_id": registers_ids[4], "mask": "0x1000", "order": 1, "shift": "8", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "pll_vreg_pfdcp_bot_trim",
            "type": "RW",
            "default": "0x0",
            "description": "Bot regulator trim settings Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "1.225", "description": "1.225V"},
                {"bits": "001", "value": "1.2", "description": "1.2V"},
                {"bits": "010", "value": "1.275", "description": "1.275V"},
                {"bits": "011", "value": "1.25", "description": "1.25V"},
                {"bits": "100", "value": "test_1.15", "description": "1.15V"},
                {"bits": "101", "value": "not_used", "description": ""},
                {"bits": "110", "value": "not_used", "description": ""},
                {"bits": "111", "value": "not_used", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[11], "mask": "0x0003", "order": 0, "shift": "0", "width": 2},
                {"register_id": registers_ids[5], "mask": "0x0010", "order": 1, "shift": "4", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # NVM11[12:11]
        {
            "device_id": devices_ids[0],
            "name": "pll_vreg_fbdiv_bot_trim",
            "type": "RW",
            "default": "0x0",
            "description": "Trim bits for PLL post-div regulator Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "1.225", "description": "1.225V"},
                {"bits": "001", "value": "1.2", "description": "1.2V"},
                {"bits": "010", "value": "1.275", "description": "1.275V"},
                {"bits": "011", "value": "1.25", "description": "1.25V"},
                {"bits": "100", "value": "test_1.15", "description": "1.15V"},
                {"bits": "101", "value": "not_used", "description": ""},
                {"bits": "110", "value": "not_used", "description": ""},
                {"bits": "111", "value": "not_used", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[12], "mask": "0x1800", "order": 0, "shift": "11", "width": 2},
                {"register_id": registers_ids[4], "mask": "0x0008", "order": 1, "shift": "3", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # NVM14[15:14]
        {
            "device_id": devices_ids[0],
            "name": "drv_vreg_pdiv_bot_trim",
            "type": "RW",
            "default": "0x0",
            "description": "LSB bits of drv_vreg_pdiv_bot_trim. See reg4[5]. Bot regulator trim settings Token_type: "
            "list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "1.225", "description": "1.225V"},
                {"bits": "001", "value": "1.2", "description": "1.2V"},
                {"bits": "010", "value": "1.275", "description": "1.275V"},
                {"bits": "011", "value": "1.25", "description": "1.25V"},
                {"bits": "100", "value": "test_1.15", "description": "1.15V"},
                {"bits": "101", "value": "not_used", "description": ""},
                {"bits": "110", "value": "not_used", "description": ""},
                {"bits": "111", "value": "not_used", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[13], "mask": "0xC000", "order": 0, "shift": "14", "width": 2},
                {"register_id": registers_ids[4], "mask": "0x0200", "order": 1, "shift": "5", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # NVM 16[1:0],[3:2],[5:4]
        {
            "device_id": devices_ids[0],
            "name": "pll_vreg_vco_top_trim",
            "type": "RW",
            "default": "0x0",
            "description": "LSB bits of pll_vreg_vco_top_trim. See reg5[15] for the MSB bit.Top regulator trim "
            "settings.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "1.45", "description": "1.45V"},
                {"bits": "001", "value": "1.425", "description": "1.425V"},
                {"bits": "010", "value": "1.475", "description": "1.475V"},
                {"bits": "011", "value": "1.5", "description": "1.5V"},
                {"bits": "100", "value": "bypass", "description": ""},
                {"bits": "101", "value": "not_used", "description": ""},
                {"bits": "110", "value": "not_used", "description": ""},
                {"bits": "111", "value": "disable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[14], "mask": "0x0003", "order": 0, "shift": "0", "width": 2},
                {"register_id": registers_ids[5], "mask": "0x8000", "order": 1, "shift": "15", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "pll_vreg_fbdiv_top_trim",
            "type": "RW",
            "default": "0x0",
            "description": "LSB bits of pll_vreg_fbdiv_top_trim. See reg5[14] for the MSB bit.Top regulator trim "
            "settings.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "1.45", "description": "1.45"},
                {"bits": "001", "value": "1.42", "description": "1.42"},
                {"bits": "010", "value": "1.475", "description": "1.475"},
                {"bits": "011", "value": "1.5", "description": "1.5"},
                {"bits": "100", "value": "bypass", "description": ""},
                {"bits": "101", "value": "not_used", "description": ""},
                {"bits": "110", "value": "not_used", "description": ""},
                {"bits": "111", "value": "disable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[14], "mask": "0x000C", "order": 0, "shift": "2", "width": 2},
                {"register_id": registers_ids[5], "mask": "0x4000", "order": 1, "shift": "14", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "pll_vreg_pfdcp_top_trim",
            "type": "RW",
            "default": "0x0",
            "description": "LSB bits of  pll_vreg_pfdcp_top_trim. See reg5[13] for the MSB bit.Top regulator trim "
            "settings Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "1.45", "description": "1.45V"},
                {"bits": "001", "value": "1.42", "description": "1.42V"},
                {"bits": "010", "value": "1.475", "description": "1.475V"},
                {"bits": "011", "value": "1.5", "description": "1.5V"},
                {"bits": "100", "value": "bypass", "description": ""},
                {"bits": "101", "value": "not_used", "description": ""},
                {"bits": "110", "value": "not_used", "description": ""},
                {"bits": "111", "value": "disable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[14], "mask": "0x0030", "order": 0, "shift": "4", "width": 2},
                {"register_id": registers_ids[5], "mask": "0x2000", "order": 1, "shift": "13", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # NVM21[6]
        {
            "device_id": devices_ids[0],
            "name": "pll_hi_jitter_mode",
            "type": "RW",
            "default": "0x0",
            "description": "Selects the bad edge instead of a good edge as reference clock to the PLL, thereby "
            "increasing the PLL jitter.Token_type: list",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "low-jitter", "description": "100fs"},
                {"bits": "1", "value": "high-jitter", "description": "400fs"},
            ],
            "bits": [{"register_id": registers_ids[15], "mask": "0x0200", "order": 0, "shift": "6", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # Spinel_B - REG0(REG_REG)
        {
            "device_id": devices_ids[2],
            "name": "nvm_force_pwr_up",
            "type": "RW",
            "default": "0x0",
            "description": "Force turning on nvm power switch ",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[16], "mask": "0x8000", "order": 0, "shift": "15", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_cmp_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enables compare for nvm operations",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[16], "mask": "0x4000", "order": 0, "shift": "14", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_use_ecc",
            "type": "RW",
            "default": "0x0",
            "description": "Enables ecc for nvm operations",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[16], "mask": "0x2000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_cmd_valid",
            "type": "RW",
            "default": "0x0",
            "description": "Starts execution of selected nvm command",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "valid", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[16], "mask": "0x1000", "order": 0, "shift": "12", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_time_trim",
            "type": "RW",
            "default": "0x0",
            "description": "Selects clock source and timings for nvm ctr",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "digital", "description": "follow digital"},
                {"bits": "001", "value": "mems", "description": ""},
                {"bits": "010", "value": "vco", "description": ""},
                {"bits": "011", "value": "cmos", "description": ""},
                {"bits": "100", "value": "cmos_fast", "description": ""},
                {"bits": "101", "value": "not_used_5", "description": ""},
                {"bits": "110", "value": "not_used_6", "description": ""},
                {"bits": "111", "value": "not_used_7", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[16], "mask": "0x0800", "order": 0, "shift": "11", "width": 1},
                {"register_id": registers_ids[24], "mask": "0x00C0", "order": 0, "shift": "6", "width": 2},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_cmd",
            "type": "RW",
            "default": "0x0",
            "description": "Selects command for nvm ctr",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0000", "value": "NONE", "description": ""},
                {"bits": "0001", "value": "autoburn_copy", "description": ""},
                {"bits": "0010", "value": "autoburn_hold", "description": ""},
                {"bits": "0011", "value": "autoburn_ecc", "description": ""},
                {"bits": "0100", "value": "load_hold", "description": ""},
                {"bits": "0101", "value": "clear_flags", "description": ""},
                {"bits": "0110", "value": "burn_with_mask", "description": ""},
                {"bits": "0111", "value": "autoburn_mstr", "description": ""},
                {"bits": "1000", "value": "autoburn_isp_corl", "description": "reserved"},
                {"bits": "1001", "value": "reload_copy", "description": ""},
                {"bits": "1010", "value": "reload_mstr", "description": ""},
                {"bits": "1011", "value": "load_fs", "description": "reserved"},
                {"bits": "1100", "value": "load_hold_raw", "description": ""},
                {"bits": "1101", "value": "autoburn_isp", "description": "reserved"},
                {"bits": "1110", "value": "reload_init", "description": ""},
                {"bits": "1111", "value": "reload_init", "description": "reserved"},
            ],
            "bits": [{"register_id": registers_ids[16], "mask": "0x0780", "order": 0, "shift": "7", "width": 4}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_copy_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Selects copy number for shadow section",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "fixed_point",
            "tokens": [],
            "bits": [{"register_id": registers_ids[16], "mask": "0x0070", "order": 0, "shift": "0", "width": 3}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_section_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Selects section of shadow to operate with",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0000", "value": "common", "description": ""},
                {"bits": "0001", "value": "config", "description": ""},
                {"bits": "0010", "value": "fixed_coeff", "description": ""},
                {"bits": "0011", "value": "ffpc", "description": ""},
                {"bits": "0100", "value": "coeff_5th", "description": ""},
                {"bits": "0101", "value": "coeff_11th", "description": ""},
                {"bits": "0110", "value": "garnet", "description": ""},
                {"bits": "0111", "value": "heater", "description": ""},
                {"bits": "1000", "value": "isc", "description": ""},
                {"bits": "1001", "value": "user", "description": ""},
                {"bits": "1010", "value": "not_used_10", "description": ""},
                {"bits": "1011", "value": "not_used_11", "description": ""},
                {"bits": "1100", "value": "not_used_12", "description": ""},
                {"bits": "1101", "value": "not_used_13", "description": ""},
                {"bits": "1110", "value": "not_used_14", "description": ""},
                {"bits": "1111", "value": "not_used_15", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[16], "mask": "0x000f", "order": 0, "shift": "0", "width": 4}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # REG1(REG_REG)
        {
            "device_id": devices_ids[2],
            "name": "hold_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Resets holding registers",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "reset", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[17], "mask": "0x8000", "order": 0, "shift": "15", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "mask_personality",
            "type": "RW",
            "default": "0x0",
            "description": "Masks prog_production_mode bit",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[17], "mask": "0x4000", "order": 0, "shift": "14", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_err_freq_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enables frequency generation based on error code",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[17], "mask": "0x2000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_hold_size",
            "type": "RW",
            "default": "0x0",
            "description": "Selects size of holding register for nvm ctrl",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "32", "description": ""},
                {"bits": "01", "value": "64", "description": ""},
                {"bits": "10", "value": "96", "description": ""},
                {"bits": "11", "value": "128", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[17], "mask": "0x1800", "order": 0, "shift": "11", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_PTR",
            "type": "RW",
            "default": "0x0",
            "description": "Overwrites o_ptr for nvm.o_nvmptr = nvm_ptr xor nvm_predefined",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "0", "description": ""},
                {"bits": "1", "value": "1", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[17], "mask": "0x0010", "order": 0, "shift": "4", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_PTM",
            "type": "RW",
            "default": "0x0",
            "description": "Overwrites o_nvmptm for nvmo_nvmptm = nvm_ptm xor nvm_predefined",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "fixed_point",
            "tokens": [],
            "bits": [{"register_id": registers_ids[17], "mask": "0x000F", "order": 0, "shift": "0", "width": 4}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        # REG2(REG_REG)
        {
            "device_id": devices_ids[2],
            "name": "outdrv_force_en",
            "type": "RW",
            "default": "0x0",
            "description": "",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[18], "mask": "0x8000", "order": 0, "shift": "15", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "outdrv_force_dis",
            "type": "RW",
            "default": "0x0",
            "description": "",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "defult", "description": ""},
                {"bits": "1", "value": "pd", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[18], "mask": "0x4000", "order": 0, "shift": "14", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "fs_force_dis",
            "type": "RW",
            "default": "0x0",
            "description": "Disables clock for fs",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[18], "mask": "0x2000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "tdc_dual_res_dco_force_lock",
            "type": "RW",
            "default": "0x0",
            "description": "",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "normal", "description": ""},
                {"bits": "1", "value": "lock", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[18], "mask": "0x1000", "order": 0, "shift": "12", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_mode",
            "type": "RW",
            "default": "0x0",
            "description": "Switches txrx to slave/master mode",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "master", "description": ""},
                {"bits": "1", "value": "slave", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[18], "mask": "0x0800", "order": 0, "shift": "11", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_err_cnt_rst",
            "type": "RW",
            "default": "0x0",
            "description": "Resets error counters for txrx",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "reset", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[18], "mask": "0x0400", "order": 0, "shift": "10", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_wait_sup_mode",
            "type": "RW",
            "default": "0x0",
            "description": "Keeps rx of txrx on until sup packet is not received or not",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "rx_on", "description": ""},
                {"bits": "1", "value": "rx_off", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[18], "mask": "0x0200", "order": 0, "shift": "9", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_row_addr",
            "type": "RW",
            "default": "0x0",
            "description": "Selects nvm row",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "fixed_point",
            "tokens": [],
            "bits": [{"register_id": registers_ids[18], "mask": "0x0200", "order": 0, "shift": "9", "width": 9}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_tx_clk_sel",
            "type": "RW",
            "default": "0x0",
            "description": "Clk_tx_2mhz clock source selector",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "clk_dig", "description": ""},
                {"bits": "01", "value": "clk_rx", "description": ""},
                {"bits": "10", "value": "clk_prog", "description": ""},
                {"bits": "11", "value": "not_used_3", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[19], "mask": "0xc000", "order": 0, "shift": "14", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_force_en",
            "type": "RW",
            "default": "0x0",
            "description": "Forces txrx on",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[19], "mask": "0x2000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_force_dis",
            "type": "RW",
            "default": "0x0",
            "description": "Forces txrx off",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "disable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[19], "mask": "0x1000", "order": 0, "shift": "12", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_slv_fail_dis_timeout[1:0]",
            "type": "RW",
            "default": "0x0",
            "description": "Fail-disable timeout for txrx in slave mode",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "disabled", "description": ""},
                {"bits": "01", "value": "10", "description": ""},
                {"bits": "10", "value": "100", "description": ""},
                {"bits": "11", "value": "500", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[19], "mask": "0x0C00", "order": 0, "shift": "10", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_usr_tr_size[7:0]",
            "type": "RW",
            "default": "0x0",
            "description": "Selects burst size for usr transaction",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "fixed_point",
            "tokens": [],
            "bits": [{"register_id": registers_ids[19], "mask": "0x03FC", "order": 0, "shift": "2", "width": 8}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_usr_tr_type",
            "type": "RW",
            "default": "0x0",
            "description": "Selects type for usr transaction",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00", "value": "sap", "description": ""},
                {"bits": "01", "value": "write", "description": ""},
                {"bits": "10", "value": "read", "description": ""},
                {"bits": "11", "value": "sap_readback", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[19], "mask": "0x0003", "order": 0, "shift": "0", "width": 2}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_tfts_osc_det",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm tfts_osc_det state bypass enable",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[20], "mask": "0x8000", "order": 0, "shift": "14", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_apex_osc_det",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm apex_osc_det state bypass enable",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[20], "mask": "0x4000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "ser_16bit_addr_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enable access to all register map, changes data stream for i2c(16-bit address) and spi("
            "15-bit address).",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "8", "description": "bit register address"},
                {"bits": "1", "value": "16", "description": "bit register address"},
            ],
            "bits": [{"register_id": registers_ids[20], "mask": "0x2000", "order": 0, "shift": "12", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "ser_header_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enable header insertion(0xfa0a) for i2c/spi master reading",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[20], "mask": "0x1000", "order": 0, "shift": "11", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_usr_src_addr[11:0]",
            "type": "RW",
            "default": "0x0",
            "description": "Selects source addr for usr transaction",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "fixed_point",
            "tokens": [],
            "bits": [{"register_id": registers_ids[20], "mask": "0x0FFF", "order": 0, "shift": "0", "width": 12}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dsm_dac_test_out_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enable dsm_dac test bit stream output",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[21], "mask": "0x8000", "order": 0, "shift": "14", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "pfm_clk_disable",
            "type": "RW",
            "default": "0x0",
            "description": "Pfm operating clock disable",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "enable", "description": ""},
                {"bits": "1", "value": "disable", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[21], "mask": "0x4000", "order": 0, "shift": "13", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_usr_tr_req",
            "type": "RW",
            "default": "0x0",
            "description": "Set usr transaction request valid",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "valid", "description": ""},
            ],
            "bits": [{"register_id": registers_ids[21], "mask": "0x1000", "order": 0, "shift": "14", "width": 1}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "txrx_usr_dst_addr",
            "type": "RW",
            "default": "0x0",
            "description": "Selects destination addr for usr transaction",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "fixed_point",
            "tokens": [],
            "bits": [{"register_id": registers_ids[21], "mask": "0x0FFF", "order": 0, "shift": "0", "width": 12}],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "DCXO2",
            "type": "RW",
            "default": "0x0",
            "description": "Dcxo path2 input data bus (s.38f, signed format) Token_type:fixed_point",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "fixed_point",
            "tokens": [],
            "bits": [
                {"register_id": registers_ids[22], "mask": "0xFFFF", "order": 0, "shift": "0", "width": 16},
                {"register_id": registers_ids[23], "mask": "0xFFFF", "order": 0, "shift": "0", "width": 16},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "reg_fs8",
            "type": "RW",
            "default": "0x0",
            "description": "Selects fs section in reg fs mode",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "000", "value": "fs0", "description": ""},
                {"bits": "001", "value": "fs1", "description": ""},
                {"bits": "010", "value": "fs2", "description": ""},
                {"bits": "011", "value": "fs3", "description": ""},
                {"bits": "100", "value": "fs4", "description": ""},
                {"bits": "101", "value": "fs5", "description": ""},
                {"bits": "110", "value": "fs6", "description": ""},
                {"bits": "111", "value": "fs7", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[24], "mask": "0xE000", "order": 0, "shift": "13", "width": 3},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_oe_disable",
            "type": "RW",
            "default": "0x0",
            "description": "Control the output enable, combined with polarity setting (nvm82[12])",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "enable", "description": "enabled output"},
                {"bits": "1", "value": "disable", "description": "disabled output"},
            ],
            "bits": [
                {"register_id": registers_ids[24], "mask": "0x1000", "order": 0, "shift": "12", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_ssc_disable",
            "type": "RW",
            "default": "0x0",
            "description": "Digital ssc disable",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disabled", "description": "enable SSC mode"},
                {"bits": "1", "value": "enabled", "description": "disable SSC mode"},
            ],
            "bits": [
                {"register_id": registers_ids[24], "mask": "0x0800", "order": 0, "shift": "11", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "isc_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Resets isc",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[24], "mask": "0x0400", "order": 0, "shift": "10", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dcxo2_speed_flag_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Reset the dcxo2 update rate speed flag register",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[24], "mask": "0x0200", "order": 0, "shift": "9", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "nvm_clk_en",
            "type": "RW",
            "default": "0x0",
            "description": "Enables clock for nvm ctrl",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[24], "mask": "0x0100", "order": 0, "shift": "8", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "isp_cmd_valid",
            "type": "RW",
            "default": "0x0",
            "description": "Isp command valid",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "default", "description": ""},
                {"bits": "1", "value": "valid", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[24], "mask": "0x0020", "order": 0, "shift": "5", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dcxo1_speed_flag_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Reset the dcxo1 update rate speed register",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[24], "mask": "0x0010", "order": 0, "shift": "4", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "isp_cmd",
            "type": "RW",
            "default": "0x0",
            "description": "Isp command",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0000", "value": "not_used_0", "description": ""},
                {"bits": "0001", "value": "not_used_1", "description": ""},
                {"bits": "0010", "value": "not_used_2", "description": ""},
                {"bits": "0011", "value": "not_used_3", "description": ""},
                {"bits": "0100", "value": "not_used_4", "description": ""},
                {"bits": "0101", "value": "not_used_5", "description": ""},
                {"bits": "0110", "value": "not_used_6", "description": ""},
                {"bits": "0111", "value": "not_used_7", "description": ""},
                {"bits": "1000", "value": "not_used_8", "description": ""},
                {"bits": "1001", "value": "not_used_9", "description": ""},
                {"bits": "1010", "value": "not_used_10", "description": ""},
                {"bits": "1011", "value": "not_used_11", "description": ""},
                {"bits": "1100", "value": "not_used_12", "description": ""},
                {"bits": "1101", "value": "autoburn_isp", "description": ""},
                {"bits": "1110", "value": "not_used_14", "description": ""},
                {"bits": "1111", "value": "not_used_15", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[24], "mask": "0x000F", "order": 0, "shift": "0", "width": 4},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "reserved15",
            "type": "RW",
            "default": "0x0",
            "description": "Reserved bits of reg15",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "none",
            "tokens": [],
            "bits": [
                {"register_id": registers_ids[25], "mask": "0xFFF0", "order": 0, "shift": "4", "width": 12},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "heater_cmd_ld_dac_code_r",
            "type": "RW",
            "default": "0x0",
            "description": "External heater control r channel dac code load trigger. "
            "toggling register value triggers dac code transmission to gamet",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "0", "description": ""},
                {"bits": "1", "value": "1", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[25], "mask": "0x0008", "order": 0, "shift": "3", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "heater_cmd_ld_dac_code_l",
            "type": "RW",
            "default": "0x0",
            "description": "External heater control l channel dac code load trigger."
            "toggling register value triggers dac code transmission to garnet.",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "0", "description": ""},
                {"bits": "1", "value": "1", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[25], "mask": "0x0004", "order": 0, "shift": "2", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "heater_cmd_ld_dac_code_tb",
            "type": "RW",
            "default": "0x0",
            "description": "External heater control tb channel dac code load trigger"
            "toggling register value triggers dac code transmission to garnet",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "0", "description": ""},
                {"bits": "1", "value": "1", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[25], "mask": "0x0002", "order": 0, "shift": "1", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "heater_cmd_latch_lpf_out",
            "type": "RW",
            "default": "0x0",
            "description": "Unused",
            "callback": {"pre": "", "post": ""},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "none",
            "tokens": [],
            "bits": [
                {"register_id": registers_ids[25], "mask": "0x0001", "order": 0, "shift": "0", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_nvm_rd_user",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm nvm_rd_user state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x8000", "order": 0, "shift": "15", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_tc_start",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm tc_strtup state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x4000", "order": 0, "shift": "14", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_dual_res_tdc_start",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm dualmems_tdc_strtup state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x2000", "order": 0, "shift": "13", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_nvm_rd_coeff",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm nvm_rd_coeff state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x1000", "order": 0, "shift": "12", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_cp_nvm_garnet",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm cp_nvm_garnet state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x0800", "order": 0, "shift": "11", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_ack_garnet",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm ack_garnet state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x0400", "order": 0, "shift": "10", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_wait_garnet",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm wait_garnet state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x0200", "order": 0, "shift": "9", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_nvm_rd_cfg",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm nvm_rd_cfg state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x0100", "order": 0, "shift": "8", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_bg_startup",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm bg_strtup state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x0080", "order": 0, "shift": "7", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_nvm_rd_com",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm nvm_rd_com state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x0040", "order": 0, "shift": "6", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "stup_bypass_nvm_rd_start",
            "type": "RW",
            "default": "0x0",
            "description": "Startup fsm nvm_rd_strtup state bypass enable Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x0020", "order": 0, "shift": "5", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_test_din_sel[4:0]",
            "type": "RW",
            "default": "0x0",
            "description": "Select test input port Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "00000", "value": "not_used_0", "description": ""},
                {"bits": "00001", "value": "tempcomp_din_test", "description": ""},
                {"bits": "00010", "value": "tempcomp_lpf_din_test", "description": ""},
                {"bits": "00011", "value": "tdc_dual_res_sdm_int_mode", "description": ""},
                {"bits": "00100", "value": "not_used_4", "description": ""},
                {"bits": "00101", "value": "not_used_5", "description": ""},
                {"bits": "00110", "value": "not_used_6", "description": ""},
                {"bits": "00111", "value": "not_used_7", "description": ""},
                {"bits": "01000", "value": "not_used_8", "description": ""},
                {"bits": "01001", "value": "not_used_9", "description": ""},
                {"bits": "01010", "value": "not_used_10", "description": ""},
                {"bits": "01011", "value": "dpll_sdm_din_test", "description": ""},
                {"bits": "01100", "value": "apll_sdm_din_test", "description": ""},
                {"bits": "01101", "value": "dpll_cic_out_sel_test", "description": ""},
                {"bits": "01110", "value": "tabs_lpf_din_test", "description": ""},
                {"bits": "01111", "value": "tabs_din_test", "description": ""},
                {"bits": "10000", "value": "vcxo_din_test", "description": ""},
                {"bits": "10001", "value": "pfm_ffpc_din_test", "description": ""},
                {"bits": "10010", "value": "pfm_tempcomp_din_test", "description": ""},
                {"bits": "10011", "value": "ss_din_test", "description": ""},
                {"bits": "10100", "value": "dac_gain_din_test", "description": ""},
                {"bits": "10101", "value": "dsm_dac_din_test", "description": ""},
                {"bits": "10110", "value": "heater_lpf_din_test", "description": ""},
                {"bits": "10111", "value": "heater_temp_sp_test", "description": ""},
                {"bits": "11000", "value": "test_heater_pid_out_test", "description": ""},
                {"bits": "11001", "value": "vcxo_iir_din_test", "description": ""},
                {"bits": "11010", "value": "vcxo_calib_mu_din_test", "description": ""},
                {
                    "bits": "11011",
                    "value": "vcxo_calib_tdc_din_test",
                    "description": "Enables trim-skew engine TDC code test input from the hold register",
                },
                {"bits": "11100", "value": "vcxo_calib_din_ld_test", "description": ""},
                {"bits": "11101", "value": "dpll_cic_in_test", "description": ""},
                {"bits": "11110", "value": "ffpc_din_test", "description": ""},
                {"bits": "11111", "value": "ffpc_flt_din_test", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[26], "mask": "0x001F", "order": 0, "shift": "0", "width": 5},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_vcxo_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Vcxo digital (digital filter and trim-skew engine) global reset Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x8000", "order": 0, "shift": "15", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_heater_if_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Reset enable for heater control digital internal i/f to txrx Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x4000", "order": 0, "shift": "14", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_heater_poly_r_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Heater control r polynomial reset Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "reset_release", "description": "Reset released"},
                {"bits": "1", "value": "reset_assert", "description": "Reset asserted"},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x2000", "order": 0, "shift": "13", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_heater_poly_l_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Heater control l polynomial reset Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "reset_release", "description": "Reset released"},
                {"bits": "1", "value": "reset_assert", "description": "Reset asserted"},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x1000", "order": 0, "shift": "12", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_heater_poly_tb_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Heater control tb polynomial reset Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "reset_release", "description": "Reset released"},
                {"bits": "1", "value": "reset_assert", "description": "Reset asserted"},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0800", "order": 0, "shift": "11", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_heater_pid_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Heater control pid reset Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "reset_release", "description": "Reset released"},
                {"bits": "1", "value": "reset_assert", "description": "Reset asserted"},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0400", "order": 0, "shift": "10", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_heater_sp_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Heater control setpoint controller reset Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "reset_release", "description": "Reset released"},
                {"bits": "1", "value": "reset_assert", "description": "Reset asserted"},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0200", "order": 0, "shift": "9", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_heater_lpf_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Heater control per lpf reset Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "reset_release", "description": "Reset released"},
                {"bits": "1", "value": "reset_assert", "description": "Reset asserted"},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0100", "order": 0, "shift": "8", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_heater_control_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Heater control global reset Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "reset_release", "description": "Reset released"},
                {"bits": "1", "value": "reset_assert", "description": "Reset asserted"},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0080", "order": 0, "shift": "7", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dac_gain_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Not used Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "not_used_0", "description": ""},
                {"bits": "1", "value": "not_used_1", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0040", "order": 0, "shift": "6", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "dig_apll_seri_tx_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0020", "order": 0, "shift": "5", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "sdmod_dpll_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0010", "order": 0, "shift": "4", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "pfm_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0008", "order": 0, "shift": "3", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[0],
            "name": "tdc_dual_res_sdm_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0004", "order": 0, "shift": "2", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "tdc_dual_res_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [
                {"bits": "0", "value": "disable", "description": ""},
                {"bits": "1", "value": "enable", "description": ""},
            ],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0002", "order": 0, "shift": "1", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
        {
            "device_id": devices_ids[2],
            "name": "tdc_bjt_reset",
            "type": "RW",
            "default": "0x0",
            "description": "Reset tdc_data path for test Token_type:list",
            "callback": {"pre": None, "post": None},
            "bits_to_value": "",
            "value_to_bits": "",
            "token_type": "list",
            "tokens": [{"bits": "0", "value": "0", "description": ""}, {"bits": "1", "value": "1", "description": ""}],
            "bits": [
                {"register_id": registers_ids[27], "mask": "0x0001", "order": 0, "shift": "0", "width": 1},
            ],
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
        },
    ]
    fields_ids = insert_docs(my_db, "fields", fields)
    id_16 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[16], "device_id": devices_ids[2]}}]
    )
    id_17 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[17], "device_id": devices_ids[2]}}]
    )
    id_18 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[18], "device_id": devices_ids[2]}}]
    )
    id_19 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[19], "device_id": devices_ids[2]}}]
    )
    id_20 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[20], "device_id": devices_ids[2]}}]
    )
    id_21 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[21], "device_id": devices_ids[2]}}]
    )
    id_22 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[22], "device_id": devices_ids[2]}}]
    )
    id_23 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[23], "device_id": devices_ids[2]}}]
    )
    id_24 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[24], "device_id": devices_ids[2]}}]
    )
    id_25 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[25], "device_id": devices_ids[2]}}]
    )
    id_26 = my_db["fields"].aggregate(
        [{"$match": {"bits.register_id": registers_ids[26], "device_id": devices_ids[2]}}]
    )

    #########################################################
    # block diagram
    #########################################################
    block_diagrams = [
        {
            "device_id": devices_ids[0],
            "name": "REG 1",
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
            "size": {"width": "10px", "height": "10px"},
            "place": [
                {
                    "structure": "COMPONENT",
                    "type": "",
                    "name": "compname",
                    "label": "label1",
                    "position": {"x": 10, "y": 20},
                    "scale": 0.0,
                    "rotation": 0,
                    "label_offset": {"x": 9, "y": 30},
                    "label_rotation": 0,
                    "fields": [fields_ids[1], fields_ids[2]],
                    "port_size": 4,
                    "roles": ["EMPLOYEE"],
                    "on_click": "myClick",
                }
            ],
            "route": [
                {
                    "route_id": ObjectId(),
                    "start": {"name": "compname", "port": "COM3"},
                    "end": {"name": "compname2", "port": "COM4"},
                    "bend": "NONE",
                    "bend_location": 0.2,
                    "marker_end": None,
                }
            ],
        },
        {
            "device_id": devices_ids[0],
            "name": "REG 2",
            "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
            "size": {"width": "20px", "height": "20px"},
            "place": [
                {
                    "structure": "BLOCK",
                    "type": "",
                    "name": "blockname",
                    "label": "label2",
                    "position": {"x": 10, "y": 20},
                    "scale": 0.0,
                    "rotation": 0,
                    "label_offset": {"x": 9, "y": 30},
                    "fields": [fields_ids[3], fields_ids[4]],
                    "label_rotation": 0,
                    "port_size": 4,
                    "roles": ["EMPLOYEE"],
                    "on_click": "myClick",
                }
            ],
            "route": [
                {
                    "route_id": ObjectId(),
                    "start": {"name": "blockname", "port": "COM3"},
                    "end": {"name": "blockname2", "port": "COM4"},
                    "bend": "NONE",
                    "bend_location": 0.2,
                    "marker_end": None,
                }
            ],
        },
        {
            "device_id": devices_ids[2],
            "name": "SPINEL BLOCK DIAGRAM",
            "roles": ["EMPLOYEE", "PARTNER", "CUSTOMER"],
            "size": {"width": "600px", "height": "600px"},
            "place": [
                {
                    "label": "",
                    "label_offset": {"x": 25.0, "y": 40.0},
                    "label_rotation": 0.0,
                    "name": "rec0",
                    "on_click": "myClick",
                    "port_size": 0.6,
                    "position": {"x": -50.0, "y": 50.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 5, "width": 7},
                    "structure": "COMPONENT",
                    "type": "Rect_0_2_1_6",
                    "fields": [field["_id"] for field in list(id_16)],
                },
                {
                    "label": "",
                    "label_offset": {"x": 80.0, "y": 23.0},
                    "label_rotation": 0.0,
                    "name": "rec11",
                    "on_click": "myClick",
                    "port_size": 3,
                    "position": {"x": 36.0, "y": 130.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 3.7, "width": 5.8},
                    "structure": "COMPONENT",
                    "type": "Rect_0_0_0_0",
                    "fields": [field["_id"] for field in list(id_17)],
                },
                {
                    "label": "",
                    "label_offset": {"x": 70.0, "y": 30.0},
                    "label_rotation": 0.0,
                    "name": "m1",
                    "on_click": "myClick",
                    "port_size": 0,
                    "position": {"x": 335.0, "y": 130.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.5,
                    "structure": "COMPONENT",
                    "type": "MEMS",
                    "fields": [field["_id"] for field in list(id_18)],
                },
                {
                    "label": "Frac-N PLL",
                    "label_offset": {"x": 115.0, "y": 37.0},
                    "label_rotation": 0.0,
                    "name": "rec1",
                    "on_click": "myClick",
                    "port_size": 2,
                    "position": {"x": 220.0, "y": 215.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.8, "width": 2.7},
                    "structure": "COMPONENT",
                    "type": "Rect_1_1_1_3",
                    "fields": [field["_id"] for field in list(id_19)],
                },
                {
                    "label": "Frequency Synthesis",
                    "label_offset": {"x": 90.0, "y": 50.0},
                    "label_rotation": 0.0,
                    "name": "lab6",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 220.0, "y": 215.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [field["_id"] for field in list(id_20)],
                },
                {
                    "label": "DCXO Control",
                    "label_offset": {"x": 15.5, "y": 45.0},
                    "label_rotation": 0.0,
                    "name": "rec2",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 377.0, "y": 290.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.9, "width": 0.94},
                    "structure": "COMPONENT",
                    "type": "Rect_0_1_0_1",
                    "fields": [field["_id"] for field in list(id_21)],
                },
                {
                    "label": "VCXO ADC",
                    "label_offset": {"x": 16.0, "y": 45.0},
                    "label_rotation": 0.0,
                    "name": "rec3",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 315.0, "y": 290.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.9, "width": 0.8},
                    "structure": "COMPONENT",
                    "type": "Rect_0_1_0_1",
                    "fields": [field["_id"] for field in list(id_22)],
                },
                {
                    "label": "Temp Comp",
                    "label_offset": {"x": 13.0, "y": 43.0},
                    "label_rotation": 0.0,
                    "name": "rec4",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 253.0, "y": 290.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.9, "width": 0.8},
                    "structure": "COMPONENT",
                    "type": "Rect_1_1_0_0",
                    "fields": [field["_id"] for field in list(id_23)],
                },
                {
                    "label": "Temp Sense",
                    "label_offset": {"x": 13.0, "y": 43.0},
                    "label_rotation": 0.0,
                    "name": "rec5",
                    "on_click": "myClick",
                    "port_size": 3,
                    "position": {"x": 183.0, "y": 290.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.9, "width": 0.8},
                    "structure": "COMPONENT",
                    "type": "Rect_2_0_1_0",
                    "fields": [field["_id"] for field in list(id_21)],
                },
                {
                    "label": "OSC-TS",
                    "label_offset": {"x": 18.0, "y": 33.0},
                    "label_rotation": 0.0,
                    "name": "rec6",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 123.0, "y": 313.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.6, "width": 0.7},
                    "structure": "BLOCK",
                    "type": "Rect_1_0_1_0",
                    "fields": [field["_id"] for field in list(id_22)],
                },
                {
                    "label": "",
                    "label_offset": {"x": 1.0, "y": 8.0},
                    "label_rotation": 0.0,
                    "name": "m2",
                    "on_click": "myClick",
                    "port_size": 0,
                    "position": {"x": 70.0, "y": 260.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.4,
                    "structure": "COMPONENT",
                    "type": "MEMS",
                    "fields": [],
                },
                {
                    "label": "",
                    "label_offset": {"x": 0.0, "y": 45.0},
                    "label_rotation": 0.0,
                    "name": "m3",
                    "on_click": "myClick",
                    "port_size": 0,
                    "position": {"x": 70.0, "y": 310.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.4,
                    "structure": "COMPONENT",
                    "type": "MEMS",
                    "fields": [],
                },
                {
                    "label": "OSC-TF",
                    "label_offset": {"x": 18.0, "y": 33.0},
                    "label_rotation": 0.0,
                    "name": "rec7",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 123.0, "y": 224.5},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.6, "width": 0.7},
                    "structure": "COMPONENT",
                    "type": "Rect_1_0_1_0",
                    "fields": [field["_id"] for field in list(id_25)],
                },
                {
                    "label": "Regulators",
                    "label_offset": {"x": 35.0, "y": 23.0},
                    "label_rotation": 0.0,
                    "name": "rec8",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 116.0, "y": 190.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.4, "width": 1.2},
                    "structure": "COMPONENT",
                    "type": "Rect_0_0_0_0",
                    "fields": [field["_id"] for field in list(id_26)],
                },
                {
                    "label": "",
                    "label_offset": {"x": 19.0, "y": 33.0},
                    "label_rotation": 0.0,
                    "name": "rec9",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 453.0, "y": 222.7},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.6, "width": 0.7},
                    "structure": "COMPONENT",
                    "type": "Rect_1_1_1_1",
                    "fields": [field["_id"] for field in list(id_22)],
                },
                {
                    "label": "PC/SPI",
                    "label_offset": {"x": 80.0, "y": 23.0},
                    "label_rotation": 0.0,
                    "name": "rec10",
                    "on_click": "myClick",
                    "port_size": 3,
                    "position": {"x": 346.0, "y": 390.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.4, "width": 1.9},
                    "structure": "COMPONENT",
                    "type": "Rect_0_2_0_4",
                    "fields": [field["_id"] for field in list(id_23)],
                },
                {
                    "label": "MEMS",
                    "label_offset": {"x": 60.0, "y": 33.0},
                    "label_rotation": 0.0,
                    "name": "rec12",
                    "on_click": "myClick",
                    "port_size": 3,
                    "position": {"x": 325.0, "y": 125.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.6, "width": 0.66},
                    "structure": "COMPONENT",
                    "type": "Rect_0_0_0_1",
                    "fields": [field["_id"] for field in list(id_24)],
                },
                {
                    "label": "",
                    "label_offset": {"x": 10.0, "y": 7.0},
                    "label_rotation": 0.0,
                    "name": "rec13",
                    "on_click": "myClick",
                    "port_size": 3,
                    "position": {"x": 58.0, "y": 248.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.6, "width": 0.6},
                    "structure": "COMPONENT",
                    "type": "Rect_0_0_1_0",
                    "fields": [field["_id"] for field in list(id_22)],
                },
                {
                    "label": "",
                    "label_offset": {"x": 60.0, "y": 33.0},
                    "label_rotation": 0.0,
                    "name": "rec14",
                    "on_click": "myClick",
                    "port_size": 3,
                    "position": {"x": 58.0, "y": 298.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": {"height": 0.6, "width": 0.6},
                    "structure": "COMPONENT",
                    "type": "Rect_0_0_1_0",
                    "fields": [field["_id"] for field in list(id_25)],
                },
                {
                    "label": "GND",
                    "label_offset": {"x": 65.0, "y": 50.0},
                    "label_rotation": 0.0,
                    "name": "lab1",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 30.0, "y": 440.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "VC",
                    "label_offset": {"x": 264.0, "y": 50.0},
                    "label_rotation": 0.0,
                    "name": "lab2",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 30.0, "y": 440.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "A1,",
                    "label_offset": {"x": 49.0, "y": 46.0},
                    "label_rotation": 0.0,
                    "name": "lab3",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 330.0, "y": 440.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "MOSI",
                    "label_offset": {"x": 43.0, "y": 56.0},
                    "label_rotation": 0.0,
                    "name": "lab16",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 330.0, "y": 440.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "A0,",
                    "label_offset": {"x": 39.0, "y": 46.0},
                    "label_rotation": 0.0,
                    "name": "lab4",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 377.0, "y": 440.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "SS",
                    "label_offset": {"x": 39.0, "y": 56.0},
                    "label_rotation": 0.0,
                    "name": "lab17",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 377.0, "y": 440.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "SCLK",
                    "label_offset": {"x": 420.0, "y": 50.0},
                    "label_rotation": 0.0,
                    "name": "lab5",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 30.0, "y": 440.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "SDA,",
                    "label_offset": {"x": 39.0, "y": 46.0},
                    "label_rotation": 0.0,
                    "name": "lab6",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 450.0, "y": 440.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "MISO",
                    "label_offset": {"x": 37.0, "y": 56.0},
                    "label_rotation": 0.0,
                    "name": "lab6",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 450.0, "y": 440.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "OE",
                    "label_offset": {"x": 81.0, "y": 30.0},
                    "label_rotation": 0.0,
                    "name": "lab7",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 400.0, "y": 90.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "VDD",
                    "label_offset": {"x": 9.0, "y": 30.0},
                    "label_rotation": 0.0,
                    "name": "lab8",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 86.0, "y": 90.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "Tempflat",
                    "label_offset": {"x": 9.0, "y": 30.0},
                    "label_rotation": 0.0,
                    "name": "lab9",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 58.0, "y": 223.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "TempSense",
                    "label_offset": {"x": 9.0, "y": 30.0},
                    "label_rotation": 0.0,
                    "name": "lab10",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 55.0, "y": 333.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "CMOS IC",
                    "label_offset": {"x": 9.0, "y": 30.0},
                    "label_rotation": 0.0,
                    "name": "lab11",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 120.0, "y": 410.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "CLK",
                    "label_offset": {"x": 9.0, "y": 30.0},
                    "label_rotation": 0.0,
                    "name": "lab12",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 538.0, "y": 226.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "Dividers",
                    "label_offset": {"x": 18.0, "y": 27.0},
                    "label_rotation": 0.0,
                    "name": "lab13",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 453.0, "y": 222.7},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "& Driver",
                    "label_offset": {"x": 18.0, "y": 42.0},
                    "label_rotation": 0.0,
                    "name": "lab14",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 453.0, "y": 222.7},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
                {
                    "label": "(TDC)",
                    "label_offset": {"x": 27.0, "y": 60.0},
                    "label_rotation": 0.0,
                    "name": "lab15",
                    "on_click": "myClick",
                    "port_size": 4,
                    "position": {"x": 183.0, "y": 290.0},
                    "roles": ["EMPLOYEE", "CUSTOMER", "PARTNER"],
                    "rotation": 0.0,
                    "scale": 0.45,
                    "structure": "COMPONENT",
                    "type": "None",
                    "fields": [],
                },
            ],
            "route": [
                {
                    "bend": "VERTICAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec10", "port": "BA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec0", "port": "BC"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec10", "port": "BB"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec0", "port": "BD"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec10", "port": "BC"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec0", "port": "BE"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec10", "port": "BD"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec0", "port": "BF"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.5,
                    "end": {"name": "rec3", "port": "BA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec0", "port": "BB"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec2", "port": "BA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec10", "port": "TA"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec1", "port": "BC"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec2", "port": "TA"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec1", "port": "BB"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec3", "port": "TA"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec1", "port": "BA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec4", "port": "TA"},
                },
                {
                    "bend": "VERTICAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec9", "port": "LA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec1", "port": "RA"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec4", "port": "LA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec5", "port": "RA"},
                },
                {
                    "bend": "VERTICAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec5", "port": "LB"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec6", "port": "RA"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec4", "port": "LA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec5", "port": "RA"},
                },
                {
                    "bend": "VERTICAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec1", "port": "LA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec7", "port": "RA"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec9", "port": "BA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec10", "port": "TB"},
                },
                {
                    "bend": "VERTICAL",
                    "bend_location": 0.2,
                    "end": {"name": "rec5", "port": "LA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec7", "port": "RA"},
                },
                {
                    "bend": "VERTICAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec0", "port": "RA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec9", "port": "RA"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec9", "port": "TA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec0", "port": "TB"},
                },
                {
                    "bend": "VERTICAL",
                    "bend_location": 0.4,
                    "end": {"name": "rec6", "port": "LA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec14", "port": "RA"},
                },
                {
                    "bend": "VERTICAL",
                    "bend_location": 0.4,
                    "end": {"name": "rec7", "port": "LA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec13", "port": "RA"},
                },
                {
                    "bend": "HORIZONTAL",
                    "bend_location": 0.0,
                    "end": {"name": "rec1", "port": "TA"},
                    "marker_end": None,
                    "route_id": ObjectId(),
                    "start": {"name": "rec12", "port": "BA"},
                },
            ],
        },
    ]

    block_diagrams_ids = insert_docs(my_db, "block_diagrams", block_diagrams)  # pylint: disable=W0612 # noqa:F841

    #########################################################
    # device macros
    #########################################################

    device_macros = [
        {
            "name": "Macro#1",
            "device_id": devices_ids[0],
            "actions": [
                {"order": "1", "field_id": fields_ids[-1], "token": "$user"},
                {"order": "2", "field_id": fields_ids[-2], "token": ""},
            ],
        }
    ]
    device_macros_ids = insert_docs(my_db, "device_macros", device_macros)  # pylint: disable=W0612 # noqa:F841

    #########################################################
    # device history
    #########################################################

    # Note: Once the device view is loaded, the react front end will look into the history table version information
    # to decide whether there is mismatch between remote and local.

    device_history = [
        {
            "device_id": devices_ids[0],
            "version": 1,
            "modified_on": datetime.datetime(2022, 8, 22, 0, 0, 0),
            "changes": "",
            "required_udc_change": True,
        },
        {
            "device_id": devices_ids[0],
            "version": 2,
            "modified_on": datetime.datetime(2022, 8, 23, 0, 0, 0),
            "changes": "",
            "required_udc_change": True,
        },
    ]

    device_history_ids = insert_docs(my_db, "device_history", device_history)  # pylint: disable=W0612 # noqa:F841

    #########################################################
    # blocks
    #########################################################

    blocks = [
        {
            "name": "SPLL1",
            "access_level": "",
            "fields": [fields_ids[-1], fields_ids[-2]],
        },
        {
            "name": "SPLL2",
            "access_level": "",
            "fields": [fields_ids[0], fields_ids[1]],
        },
    ]
    block_ids = insert_docs(my_db, "blocks", blocks)

    #########################################################
    # Workflows
    #########################################################

    workflows = [{"name": "", "block_id": [block_ids[0], block_ids[1]]}]
    workflow_ids = insert_docs(my_db, "workflows", workflows)  # pylint: disable=W0612 # noqa:F841

    #########################################################
    # User Details
    #########################################################

    user_details = [
        {
            "username": "rtg@example.com",
            "first_name": "Rahul",
            "last_name": "George",
            "avatar_initials": "RG",
            "devices": [devices_ids[2]],
            "user_profile": "CUSTOMER",  # Choices: CUSTOMER, PARTNER, EMPLOYEE
            "sessions": [],
        },
        {
            "username": "arouhi@sitimead.onmicrosoft.com",
            "first_name": "A",
            "last_name": "Rouhi",
            "avatar_initials": "AR",
            "devices": [devices_ids[0], devices_ids[2]],
            "user_profile": "CUSTOMER",  # Choices: CUSTOMER, PARTNER, EMPLOYEE
            "sessions": [],
        },
        {
            "username": "jparvereshi@sitimead.onmicrosoft.com",
            "first_name": "J",
            "last_name": "Parvereshi",
            "avatar_initials": "JP",
            "devices": [devices_ids[0], devices_ids[2]],
            "user_profile": "CUSTOMER",  # Choices: CUSTOMER, PARTNER, EMPLOYEE
            "sessions": [],
        },
        {
            "username": "r@example.com",
            "first_name": "Neo",
            "last_name": "Joe",
            "avatar_initials": "NJ",
            "devices": [devices_ids[1]],
            "user_profile": "CUSTOMER",  # Choices: CUSTOMER, PARTNER, EMPLOYEE
            "sessions": [],
        },
        {
            "username": "spinel@example.com",
            "first_name": "Spinel",
            "last_name": "User",
            "avatar_initials": "SU",
            "devices": [devices_ids[2]],
            "user_profile": "CUSTOMER",  # Choices: CUSTOMER, PARTNER, EMPLOYEE
            "sessions": [],
        },
        {
            "username": "SweedaN@sitimead.onmicrosoft.com",
            "first_name": "Sweeda",
            "last_name": "",
            "avatar_initials": "S",
            "devices": [*devices_ids],
            "user_profile": "CUSTOMER",  # Choices: CUSTOMER, PARTNER, EMPLOYEE
            "sessions": [],
        },
    ]

    user_details_ids = insert_docs(my_db, "user_details", user_details)

    user_sweeda_cursor = my_db["user_details"].aggregate([{"$match": {"username": "SweedaN@sitimead.onmicrosoft.com"}}])
    user_sweeda = list(user_sweeda_cursor)[0]["_id"]

    nvm_PTM_results = my_db["fields"].aggregate([{"$match": {"name": "nvm_PTM", "device_id": devices_ids[2]}}])
    nvm_PTM = list(nvm_PTM_results)[0]["_id"]

    hold_reset_results = my_db["fields"].aggregate([{"$match": {"name": "hold_reset", "device_id": devices_ids[2]}}])
    hold_reset = list(hold_reset_results)[0]["_id"]

    nvm_force_pwr_up_results = my_db["fields"].aggregate(
        [{"$match": {"name": "nvm_force_pwr_up", "device_id": devices_ids[2]}}]
    )
    nvm_force_pwr_up = list(nvm_force_pwr_up_results)[0]["_id"]

    #########################################################
    # User device configurations
    #########################################################
    # pylint: disable=R0801
    user_device_configurations = [
        {
            "name": "Bandgap study",
            "device_id": devices_ids[2],
            "udc_uuid": uuid.uuid1(),
            "created_date": "07-07-2022",
            "created_by": user_details_ids[0],
            "description": "Config description",
            "modified_date": "07-07-2022",
            "custom_part_number": "",
            "frozen": False,
            "device_version": 1,
            "configuration_steps": [
                # {
                #     "step_id": ObjectId(),
                #     "action_type": "MACRO",
                #     "action_id": device_macros_ids[0],
                #     "source_screen": "RegisterView",
                #     "tag": None,
                #     "tokens": [{"order": "1", "value": "0000"}],
                #     "head": False,
                # },
                {
                    "step_id": ObjectId(),
                    "action_type": "FIELD",
                    "action_id": fields_ids[-3],
                    "name": "dig_outdrv_force_en",
                    "source_screen": "RegisterView",
                    "tag": None,
                    "tokens": [{"order": "1", "value": "001"}],
                    "head": True,
                },
            ],
        },
        {
            "name": "Bandgap study 2",
            "device_id": devices_ids[0],
            "udc_uuid": uuid.uuid1(),
            "created_date": "07-07-2022",
            "created_by": user_details_ids[0],
            "description": "config description 2",
            "modified_date": "07-07-2022",
            "custom_part_number": "",
            "frozen": False,
            "device_version": 1,
            "configuration_steps": [
                # {
                #     "step_id": ObjectId(),
                #     "action_type": "MACRO",
                #     "action_id": device_macros_ids[0],
                #     "source_screen": "BlockDiagramView",
                #     "tag": None,
                #     "tokens": [{"order": "1", "value": "0000"}],
                #     "head": False,
                # },
                {
                    "step_id": ObjectId(),
                    "action_type": "FIELD",
                    "action_id": fields_ids[0],
                    "name": "dig_outdrv_force_en",
                    "source_screen": "BlockDiagramView",
                    "tag": None,
                    "tokens": [{"order": "0", "value": "1"}],
                    "head": False,
                },
                {
                    "step_id": ObjectId(),
                    "action_type": "FIELD",
                    "action_id": fields_ids[1],
                    "source_screen": "ConfigurationSequenceView",
                    "name": "dig_outdrv_force_dis",
                    "tag": None,
                    "tokens": [{"order": "1", "value": "1"}],
                    "head": True,
                },
            ],
        },
        {
            "name": "Bandgap study 3",
            "device_id": devices_ids[2],
            "udc_uuid": uuid.uuid1(),
            "created_date": "07-07-2022",
            "created_by": user_details_ids[4],
            "description": "Config description 3",
            "modified_date": "07-07-2022",
            "custom_part_number": "",
            "frozen": False,
            "device_version": 1,
            "configuration_steps": [
                {
                    "step_id": ObjectId(),
                    "action_type": "FIELD",
                    "action_id": nvm_PTM,
                    "name": "nvm_PTM",
                    "source_screen": "RegisterView",
                    "tag": None,
                    "tokens": [{"order": "1", "value": "1"}],
                    "head": True,
                },
            ],
        },
        {
            "name": "Bandgap study 4",
            "device_id": devices_ids[2],
            "udc_uuid": uuid.uuid1(),
            "created_date": "07-07-2022",
            "created_by": user_details_ids[3],
            "description": "configuration description 4",
            "modified_date": "07-07-2022",
            "custom_part_number": "",
            "frozen": False,
            "device_version": 1,
            "configuration_steps": [
                {
                    "step_id": ObjectId(),
                    "action_type": "FIELD",
                    "action_id": hold_reset,
                    "name": "hold_reset",
                    "source_screen": "RegisterView",
                    "tag": None,
                    "tokens": [{"order": "1", "value": "1"}],
                    "head": True,
                },
            ],
        },
        {
            "name": "Bandgap study 5",
            "device_id": devices_ids[2],
            "udc_uuid": uuid.uuid1(),
            "created_date": "07-07-2022",
            "created_by": user_details_ids[2],
            "description": "configuration description 5",
            "modified_date": "07-07-2022",
            "custom_part_number": "",
            "frozen": False,
            "device_version": 1,
            "configuration_steps": [
                {
                    "step_id": ObjectId(),
                    "action_type": "FIELD",
                    "action_id": nvm_force_pwr_up,
                    "name": "nvm_force_pwr_up",
                    "source_screen": "RegisterView",
                    "tag": None,
                    "tokens": [{"order": "1", "value": "1"}],
                    "head": True,
                },
            ],
        },
        {
            "name": "Bandgap study 6",
            "device_id": devices_ids[2],
            "udc_uuid": uuid.uuid1(),
            "created_date": "07-07-2022",
            "created_by": user_sweeda,
            "description": "configuration description 6",
            "modified_date": "07-07-2022",
            "custom_part_number": "",
            "frozen": False,
            "device_version": 1,
            "configuration_steps": [
                {
                    "step_id": ObjectId(),
                    "action_type": "FIELD",
                    "action_id": nvm_force_pwr_up,
                    "name": "nvm_force_pwr_up",
                    "source_screen": "RegisterView",
                    "tag": None,
                    "tokens": [{"order": "1", "value": "1"}],
                    "head": True,
                },
            ],
        },
    ]
    udc_ids = insert_docs(my_db, "user_device_configurations", user_device_configurations)

    field_state = [
        {
            "config_id": udc_ids[0],
            "device_id": devices_ids[0],
            "field_id": fields_ids[0],
            "value": "1",
            "step number": "0",
        }
    ]
    field_state_ids = insert_docs(my_db, "field_state", field_state)  # pylint: disable=W0612 # noqa:F841

    #########################################################
    # register states
    #########################################################

    udc_uuid1 = my_db["user_device_configurations"].find_one({"_id": udc_ids[0]})["udc_uuid"]
    register_state = [
        {
            "config_uuid": udc_uuid1,
            "device_id": devices_ids[0],
            "register_id": registers_ids[0],
            "value": "0x0AD4",
        }
    ]
    register_state_ids = insert_docs(my_db, "register_state", register_state)  # pylint: disable=W0612 # noqa:F841


def main():
    """main method"""
    for instance in db_instances:
        db_setup(instance)


if __name__ == "__main__":
    db_instances = ["timing_configurator_local", "test_local", "timing_configurator"]
    main()
else:
    db_instances = ["test_local"]
